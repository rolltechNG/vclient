

# Create your models here.

from django.db import models
from django.urls import reverse
from django.contrib.auth.models import User
from datetime import datetime
import random
import base64
from multiselectfield import MultiSelectField

# Create your models here.


class Credential(models.Model):
    url = models.TextField(default='url', blank=False, null=False)
    username = models.CharField(
        max_length=120, blank=False, null=False)  # max_length = required
    password = models.CharField(max_length=50, blank=False, null=False)
    orgid = models.CharField(max_length=10, blank=False, null=False)
    # comment = models.TextField(blank=True, null=True)

    def __str__(self):
        return "Verification Credential"


class AccessToken(models.Model):
    ACCESS_OPTIONS = (('nin', 'NIN'),
                      ('demo', 'DEMO'),
                      ('phone', 'PHONE'), ('bio', 'BIO'), ("finger",
                                                           'FINGER SEARCH'), ('fingerV', 'FINGER VERIFICATION'),
                      ('photoV', 'PHOTO VERIFICATION'))

    user = models.OneToOneField(User, on_delete=models.CASCADE)
    token = models.TextField(max_length=5000, blank=True, null=True,
                             default='do not edit. this field is autogenerated')
    active = models.BooleanField(default=False)
    access_type = MultiSelectField(
        choices=ACCESS_OPTIONS,  blank=True, null=True)
    #readonly_fields = ('token',)

    # class ReadonlyMeta:
    #     readonly = ["token"]

    def save(self, *args, **kwargs):

        if not self.id:
            self.token = base64.b64encode(
                str(datetime.now().timestamp()**10).encode("ascii")).decode("utf-8")
            self.token = random.randint(
                10000000000000000000000, 999999999999999999999999)

        return super(AccessToken, self).save(*args, **kwargs)

    def __str__(self):
        return self.user.username


class VerificationLogs(models.Model):
    #user = models.OneToManyFields(User, on_delete=models.CASCADE)
    user = models.ForeignKey(User, on_delete=models.CASCADE)

    request_type = models.CharField(max_length=5000, blank=True)
    input = models.CharField(max_length=5000)
    output = models.CharField(max_length=5000)
    fuilfiled = models.BooleanField(default=True)
    message = models.TextField()
    created = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.user.id


class Unit(models.Model):
    ACCESS_OPTIONS = (('nin', 'NIN'),
                      ('demo', 'DEMO'),
                      ('phone', 'PHONE'), ('bio', 'BIO'), ("finger",
                                                           'FINGER SEARCH'), ('fingerV', 'FINGER VERIFICATION'),
                      ('photoV', 'PHOTO VERIFICATION'))
    DIRECTIONS = (('credit', 'CREDIT'),
                  ('debit', 'DEBIT'),
                  )

    user = models.ForeignKey(User, on_delete=models.CASCADE)
    units = models.IntegerField(blank=True, null=True,
                                default=0)
    access_type = models.CharField(
        choices=ACCESS_OPTIONS,  blank=True, null=True, default='nin', max_length=100)

    direction = models.CharField(
        choices=DIRECTIONS,  blank=True, null=True, default='credit', max_length=100, editable=False)

    exclude = ['direction']

    def __str__(self):
        return self.user.username
